<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.alfresco.extension</groupId>
    <artifactId>versions-diff-share</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>Alfresco share :: VersionsDiff</name> 
    <description>Alfresco share :: VersionsDiff</description> 
  	<!-- Default properties -->
	<properties>
		<!-- Module id -->
		<!-- <alfresco.module.id>versions-diff-share</alfresco.module.id> -->
		
		<!-- Alfresco Maven Plugin version to use -->
	    <alfresco.sdk.version>3.0.1</alfresco.sdk.version>
	    <alfresco.share.version>5.2.e</alfresco.share.version>
		<alfresco.surf.version>6.11</alfresco.surf.version>
	    <!-- To know which resource folder to filter for AMP extension projects -->
		<app.amp.folder>src/main/amp</app.amp.folder>
		<!-- To know which folder filtered AMP resources should end up in under /target -->
		<app.amp.output.folder>${project.build.directory}/amp</app.amp.output.folder>
		<!-- Turns on/off POM properties filtering globally. By default filtering is on.
        This can be overridden in your POM, but do it at your own risk as it may break SDK functionalities -->
        <app.filtering.enabled>true</app.filtering.enabled>
	    
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <alfresco.groupId>org.alfresco</alfresco.groupId>
       	<maven.alfresco.edition>community</maven.alfresco.edition>
       	<maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
		
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format>
        <!-- Alfresco Share Community 5.2 -->
        <servlet-api.version>2.5</servlet-api.version>
	</properties>
	
    <dependencyManagement>
        <dependencies>
            <dependency>
	            <groupId>${alfresco.groupId}</groupId>
	            <artifactId>share</artifactId>
	            <version>${alfresco.share.version}</version>
	            <type>war</type>
	            <scope>provided</scope>
	        </dependency>
            <dependency>
	            <groupId>${alfresco.groupId}</groupId>
	            <artifactId>share</artifactId>
	            <version>${alfresco.share.version}</version>
	            <classifier>classes</classifier>
	            <scope>provided</scope>
	        </dependency>
	        <dependency>
	            <groupId>${alfresco.groupId}</groupId>
	            <artifactId>alfresco-web-framework-commons</artifactId>
	            <version>${alfresco.share.version}</version>
	            <classifier>classes</classifier>
	            <scope>provided</scope>
	        </dependency>
	        <dependency>
	            <groupId>org.alfresco.surf</groupId>
	            <artifactId>spring-surf</artifactId>
	            <version>${alfresco.surf.version}</version>
	            <scope>provided</scope>
	        </dependency>
	        <dependency>
	            <groupId>org.alfresco.surf</groupId>
	            <artifactId>spring-surf-api</artifactId>
	            <version>${alfresco.surf.version}</version>
	            <scope>provided</scope>
	        </dependency>
        </dependencies>
    </dependencyManagement>
  
  
    <dependencies>
  		<dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share</artifactId>
            <version>${alfresco.share.version}</version>
            <classifier>classes</classifier>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.alfresco.surf</groupId>
            <artifactId>spring-surf-api</artifactId>
            <version>${alfresco.surf.version}</version>
            <scope>provided</scope>
        </dependency>
        
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
        
    </dependencies>
    
    <build>
		<plugins>		
			  	<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
					<executions>
					    <execution>
					        <id>build-amp-file</id>
					        <phase>package</phase>
					        <goals>
					            <goal>single</goal>
					        </goals>
					        <!--  				         
					        <configuration>
					            <appendAssemblyId>false</appendAssemblyId>
					            <descriptor>src/main/assembly/amp.xml</descriptor>
					        </configuration>
					        -->			        
					    </execution>
					</executions>
					<configuration>
					    <appendAssemblyId>false</appendAssemblyId>
					    <descriptor>src/main/assembly/amp.xml</descriptor>
					</configuration>
					<dependencies>
					    <dependency>
					        <groupId>org.alfresco.maven.plugin</groupId>
					        <artifactId>alfresco-maven-plugin</artifactId>
					        <version>${alfresco.sdk.version}</version>
					    </dependency>
					</dependencies>
			   </plugin>	
		  	  <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
                <version>${alfresco.sdk.version}</version>
                <configuration>

                    <!-- We assume that the platform/repository is already running on localhost:8080 -->
                    <enableH2>false</enableH2>
                    <enablePlatform>false</enablePlatform>
                    <enableSolr>false</enableSolr>

                    <!-- Enable the Share webapp, which is what we customize with Share JAR modules -->
                    <enableShare>true</enableShare>

                    <!--
                       JARs and AMPs that should be overlayed/applied to the Share WAR
                       (i.e. share.war)
                   -->
                    <shareModules>
                        <!-- Bring in this JAR project, need to be included here, otherwise share-config-custom.xml
                             will not be picked up. It will not be read from target/classes/META-INF -->
                        <moduleDependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                        </moduleDependency>
                    </shareModules>
                </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>	
			
				      
	      <plugin>
	          <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-resources-plugin</artifactId>
	          <version>3.0.1</version>
	          <configuration>
	              <encoding>UTF-8</encoding>
	              <nonFilteredFileExtensions> <!-- jpg, jpeg, gif, bmp and png are added automatically -->
	                  <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>acp</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>svg</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>doc</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>docx</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>xls</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>bin</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>lic</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>swf</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>zip</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>msg</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>jar</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>eot</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>woff</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>css</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>ico</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>psd</nonFilteredFileExtension>
	                  <nonFilteredFileExtension>js</nonFilteredFileExtension>
	              </nonFilteredFileExtensions>
	          </configuration>
	        </plugin>
	        <!-- Compress JavaScript files and store as *-min.js -->
	        <!--  	          
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.5.1</version>
            </plugin>
            -->	
            	
		</plugins>
		
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
	</build>
    
</project>
